package connection;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.Socket;

import entity.RegisteredUser;
import mapper.Mapper;

public class ServerThread extends Thread{

	private int id;
	private Socket socket = null;
	
	public ServerThread(Socket socket,int id) { this.socket = socket; this.id = id;}
	@Override
	public void run() {
		try (
				ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
				ObjectInputStream in  = new ObjectInputStream(socket.getInputStream());
		){
			System.out.println(id + " connected");
			while(true)
			{
				String received = (String) in.readObject();
				String[] input = received.split(" ");
//				Command command = CommandFactory.getCommand(args);
//				if (command != null) {
//					outStream.writeObject(command.execute());
//				} else {
//					outStream.writeObject(null);
//				}
				int nrArgs = input.length;
				switch (input[0]){
				case "login":
						String jsonUser = input[1];
						RegisteredUser u = Mapper.userFromJson(jsonUser);
						
						out.writeObject("approved"); // daca e bun user si pw combination
				
				}

			}
		}catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				socket.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			System.out.println(id + " disconnected");
		}
             
		
	}

}
